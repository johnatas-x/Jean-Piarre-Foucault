version: '3'

dotenv: ['.env']

vars:
  PROJECT_NAME: '{{.PROJECT_NAME | default "jean-piarre-foucault"}}'
  PHP_CONTAINER: '{{.PROJECT_NAME}}_php'
  COMPOSER_ROOT: '/var/www/html'
  DRUPAL_ROOT: '/var/www/html/web'

tasks:

  default:
    silent: true
    deps: [help]
    desc: "Print commands help"

  help:
    desc: "Print commands help"
    cmds:
      - task --list-all

  # --- Docker Tasks ---

  up:
    desc: "Start up containers"
    cmds:
      - echo "Starting up containers for {{.PROJECT_NAME}}..."
      - docker compose pull
      - docker compose up -d --remove-orphans --build

  mutagen:
    desc: "Start mutagen sync"
    cmds:
      - mutagen-compose up

  down:
    desc: "Stop containers"
    cmds:
      - docker compose stop

  start:
    desc: "Start containers without updating"
    cmds:
      - echo "Starting containers for {{.PROJECT_NAME}} from where you left off..."
      - docker compose start

  stop:
    desc: "Stop containers"
    cmds:
      - docker compose stop

  prune:
    desc: "Remove containers and their volumes"
    cmds:
      - echo "Removing containers for {{.PROJECT_NAME}}..."
      - docker compose down -v {{.CLI_ARGS}}

  ps:
    desc: "List running containers"
    cmds:
      - docker ps --filter name="{{.PROJECT_NAME}}*"

  logs:
    desc: "View container logs"
    cmds:
      - docker compose logs -f {{.CLI_ARGS}}

  # --- PHP & Drupal Tasks ---

  shell:
    desc: "Access PHP container via shell"
    cmds:
      - docker exec -ti -e COLUMNS=$(tput cols) -e LINES=$(tput lines) {{.PHP_CONTAINER}} sh

  zsh:
    desc: "Access PHP container via zsh"
    cmds:
      - docker exec -it {{.PHP_CONTAINER}} zsh

  composer:
    desc: "Run composer command inside PHP container"
    cmds:
      - docker exec {{.PHP_CONTAINER}} composer --working-dir={{.COMPOSER_ROOT}} {{.CLI_ARGS}}

  drush:
    desc: "Run drush command inside PHP container"
    cmds:
      - docker exec {{.PHP_CONTAINER}} drush -r {{.DRUPAL_ROOT}} {{.CLI_ARGS}}

  # --- DevOps Tasks ---

  quality:
    desc: "Run GrumPHP to check quality"
    cmds:
      - docker exec {{.PHP_CONTAINER}} vendor/bin/grumphp run --tasks={{.CLI_ARGS}}

  fixperm:
    desc: "Fix file permissions (for Windows)"
    cmds:
      - sudo chown -R $WODBY_USER_ID:$WODBY_GROUP_ID .
      - find web -type d -exec chmod 755 '{}' \;
      - find web -type f -exec chmod 644 '{}' \;
      - find web/sites -type d -name files -exec chmod 775 '{}' \; || true
      - find web/sites/*/files -type d -exec chmod 775 '{}' \; || true
      - find web/sites/*/files -type f -exec chmod 664 '{}' \; || true
      - find web/sites/*/settings* -type f -exec chmod 444 '{}' \; || true

  rebuild:
    desc: "Rebuild the stack"
    cmds:
      - docker compose down
      - docker compose up --build -d

  compinst:
    desc: "Install dependencies via Composer"
    cmds:
      - task: composer
        vars:
          CLI_ARGS: "install --no-progress --prefer-dist --optimize-autoloader"

  fulldeploy:
    desc: "Full Drupal deployment"
    cmds:
      - task: drush
        vars: { CLI_ARGS: "deploy" }
      - task: drush
        vars: { CLI_ARGS: "locale-check" }
      - task: drush
        vars: { CLI_ARGS: "locale-update" }
      - task: drush
        vars: { CLI_ARGS: "cr" }

  pup:
    desc: "Project update"
    deps: [compinst]
    cmds:
      - sudo cp .docker/files/settings.php.default web/sites/default/settings.php
      - task: fixperm
      - task: fulldeploy

  init-files:
    desc: "Init unversioned files"
    cmds:
      - |
        for file in \
          ".env:.env.example" \
          ".docker/.zshrc:.docker/.zshrc.dist" \
          "python/jean-pyarre/templates/v5.html:python/jean-pyarre/templates/v5.html.example" \
          "python/jean-pyarre/versions/v5.py:python/jean-pyarre/versions/v5.py.example"
        do
          IFS=":" read -r target source <<< "$file"
          [ -f "$target" ] || cp "$source" "$target"
        done

  # --- Project Initialization ---

  init:
    desc: "Initialize the project"
    deps: [prune, init-files]
    cmds:
      - sudo rm -Rf vendor web/modules/contrib web/themes/contrib web/core web/sites
      - docker compose up --build -d
      - docker exec -it {{.PHP_CONTAINER}} sudo chmod o+w /var/www/html
      - docker exec -it {{.PHP_CONTAINER}} git config --global --add safe.directory /var/www/html
      - task: compinst
      - task: fixperm
      - mkdir -p web/sites/default && cp .docker/files/settings.php.default web/sites/default/settings.php
      - task: fixperm
      - task: drush
        vars: { CLI_ARGS: "site-install 'minimal' --config-dir=../config/sync --account-name='admin' --account-pass='admin' --yes" }
      - task: fulldeploy
      - task: drush
        vars: { CLI_ARGS: "fill-lotto-draws-data --all" }
      - task: drush
        vars: { CLI_ARGS: "cron" }
      - task: drush
        vars: { CLI_ARGS: "cr" }
